import os
import time
import threading
import logging
import base64


from IPython.core.magic import (Magics, magics_class, line_cell_magic)
from IPython.display import display, Markdown

from kombu_helper import get_message, put_message, drain_messages


@magics_class
class SeuronBot(Magics):
    def __init__(self, shell):
        super(SeuronBot, self).__init__(shell)
        self.broker_url = "amqp://rabbitmq"
        self.output_queue = "jupyter-output-queue"
        self.input_queue = "jupyter-input-queue"
        drain_messages(self.broker_url, self.input_queue)
        drain_messages(self.broker_url, self.output_queue)
        threading.Thread(target=self.forward_bot_message).start()

    @line_cell_magic
    def seuronbot(self, command, cell=None):
        msg_payload = {
                "text": command,
        }
        if cell:
            code_content = self.shell.input_transformer_manager.transform_cell(cell)
            content = self._export_code(code_content)
            msg_payload["attachment"] = base64.b64encode(content.encode("utf-8")).decode("utf-8")

        put_message(self.broker_url, self.input_queue, msg_payload)

    def ensure_dir(self, f):
        d = os.path.dirname(f)
        if d and not os.path.exists(d):
            os.makedirs(d)

    def _export_code(self, content):
        code_identifier = "# -- ==generated by seuronbot== --"
        new_content = []
        new_content.extend(['# -*- coding: utf-8 -*-\n\n', code_identifier, content, code_identifier])
        new_content = '\n'.join(new_content)
        return new_content

    def forward_bot_message(self):
        while True:
            msg_payload = get_message(self.broker_url, self.output_queue, timeout=30)
            if msg_payload:
                for m in msg_payload.split("\n"):
                    display(Markdown(m))
                time.sleep(1)


for k in logging.Logger.manager.loggerDict:
    logging.getLogger(k).setLevel(logging.CRITICAL)


def load_ipython_extension(ipython):
    seuronbot = SeuronBot(ipython)
    ipython.register_magics(seuronbot)
    print("'seuronbot' magic loaded.")
